version: 2
jobs:
  docs-pr:
    working_directory: /project/prdata/
    docker:
      - image: lakhanmandloi/docker-ubuntu-ruby-python-npm
    environment:
      repoSite: dev-sunbird/dev-sunbird.github.io
      repoDocs: dev-sunbird/docs
      qaUrl: qadocs.sunbird.org
      s3Bucket: sunbird-trial
      s3Endpoint: .s3-website.ap-south-1.amazonaws.com
      subdomainPrefixDocs: pr-docs
      subdomainPrefixSite: pr-site
    steps:
    
      #Checkout
      - checkout
      
      # Run Build command
      - type: shell
        name: Build Commands
        command: |
          echo repoSite
          # Check if build is triggered by PR or commit by checking $CIRCLE_PR_NUMBER is set. 
          if [[ -z "$CIRCLE_PR_NUMBER" ]]
          then
          # If PR no. is not set then trigger Site's Review build and exit
          curl -u $cuser: -d build_parameters[CIRCLE_JOB]=review https://circleci.com/api/v1.1/project/github/$repoSite/tree/dev
          else
          # Fetch PR Data
          prData=$(curl -X GET -u $guser:x-oauth-basic https://api.github.com/repos/$repoDocs/pulls/$CIRCLE_PR_NUMBER)
          # Fetch Branch Name on which PR is sent.
          branchName=$(echo "${prData}" | jq '.base.ref')
          branchName=${branchName//\"/}
          echo "Branch Name is " $branchName
          rm -rf site/
          cd ..
          # Clone Site Code
          git clone git@github.com:$repoSite.git site
          cd site
          # Fetch All braches / versions from docs repo
          chmod +x fetch.sh
          ./fetch.sh
          # Replace pr-sent-branch folder with the pr-sent-data
          rm -rf docs/$branchName
          mkdir docs/$branchName
          cp -a ../prdata/. docs/$branchName
          rm -rf docs/$branchName/.git
          # Merge Versions Info Yaml file
          chmod +x version.sh
          ./version.sh
          # Add Build info in site config
          echo "buildVersion: Docs PR - $CIRCLE_PR_NUMBER" >> _config.yml
          echo "buildNo: $CIRCLE_BUILD_NUM" >> _config.yml
          # Build site
          bundle exec jekyll build
          cd _site
          # Push generated site to s3-bucket
          aws s3 sync --delete --quiet . s3://$s3Bucket/$subdomainPrefixDocs/$CIRCLE_PR_NUMBER
          # Add comment in pr - details about generated site url and modified pages
          userName=$(echo "${prData}" | jq '.user.login')
          contributor=${userName//\"/} 
          # Get updated files list from pr api
          updatedFiles=$(curl -X GET -u $guser:x-oauth-basic https://api.github.com/repos/$repoDocs/pulls/$CIRCLE_PR_NUMBER/files)
          # Initilize blank variables
          updatedFilesList=''
          updatedSectionsList=''
          # Site URL
          siteUrl="http://"$subdomainPrefixDocs"-"$CIRCLE_PR_NUMBER"."$qaUrl
          for row in $(echo "${updatedFiles}" | jq -r '.[] | @base64')
           do  
            _jq() 
            {
             echo ${row} | base64 --decode | jq -r ${1}
            }
            file=$(_jq '.filename')
            echo $file
            
            # Make pages from all folders with extension md file except ingredients
            if [[ "$file" != ingredients/* ]] && [[ "$file" == *.md ]]
            then
            # Remove .md and index from filename 
            fileDocs=${file//\.md/}
            fileDocs=${fileDocs//index/}
            url='- '$siteUrl'./docs/'$branchName'/'$fileDocs' <br /> '
            updatedFilesList=$updatedFilesList$url
            echo $url
            fi
            
            # If API Swagger specification is modified
            if [[ "$file" == apis/* ]] && [[ "$file" == *.yaml ]]
            then
            fileLastSegment=${file##*/}
            echo $fileLastSegment
            fileApi=${fileLastSegment//.yaml/}
            url='- '$siteUrl'/docs/'$branchName'/apis/specs/?api='$fileApi' <br /> '
            updatedFilesList=$updatedFilesList$url
            echo $url
            fi
            
            if [[ "$file" == apis/* ]] && [[ "$file" == *.html ]]
            then
            fileDocs=${file//\.html/}
            fileDocs=${fileDocs//index/}
            echo $fileLastSegment
            url='- '$siteUrl'/docs/'$branchName'/apis/specs/ <br /> '
            updatedFilesList=$updatedFilesList$url
            echo $url
            fi
            
            # If Sidebar is updated
            if [[ "$file" == version.yaml ]]
            then
            url='- Sidebar on Docs Pages'
            updatedSectionsList=$updatedSectionsList$url
            fi
            
          done 
          
          # PR Comment Data
          
          #prCommentData="Hello @'"$contributor"',<br/><br/> _This is a auto-generated response._ <br/><br/> Click the URL for review pull request - <a href='"$siteUrl"' target='_blank'>'"$siteUrl"'</a>. <br/><br/> **Modified pages are -** <br /><a href='"$updatedFilesList"' target='_blank'>'"$updatedFilesList"'</a> <br/> **Modified sections are -** <br /><a href='"$updatedSectionsList"' target='_blank'>'"$updatedSectionsList"'</a> "
          
          curl \
             -X POST \
             -u $guser:x-oauth-basic \
             -d '{"body": "Hello @'"$contributor"',<br/><br/> _This is a auto-generated response._ <br/><br/> Click the URL for review pull request - <a href='"$siteUrl"' target='_blank'>'"$siteUrl"'</a>. <br/><br/> **Modified pages are -** <br /><a href='"$updatedFilesList"' target='_blank'>'"$updatedFilesList"'</a> <br/> **Modified sections are -** <br /><a href='"$updatedSectionsList"' target='_blank'>'"$updatedSectionsList"'</a> " }' \
              https://api.github.com/repos/$repoDocs/issues/$CIRCLE_PR_NUMBER/comments
          fi
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - docs-pr
