swagger: '2.0'
info:
  version: '1.0'
  title: Geo-location API(s)
  description: >- 
     Geo-location resources API classifies the organisations on the basis of their location. 
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /
securityDefinitions:
  auth:
    type: apiKey
    name: api_key
    in: header
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /org/v1/location/create:
    post:
      description: >-
       This API is associated with creating a new Geo-location of an organisation.
          - The **_/org/v1/location/create_** endpoint executes the "create location" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Create a Geo-location
      operationId: OrgV1LocationCreatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for creating geo location.
        schema:
          $ref: '#/definitions/CreateLocationrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which **create location** request was sent.'
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies the request, if the same API is executed multiple times.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."create a new geolocation" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "create a new geolocation" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /org/v1/location/create
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >2-
              {

            "request": {

              "rootOrgId": "0123668063921192960",

                   "data":[

                         {

                         "location":"name of location",

                         "type":"location type optional"

                        },

                        {

                         "location":"name of location",

                         "type":"location type optional"

                        }

                      ]

            }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Location
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/location/update/{locationId}:
    parameters:
      - in: path
        name: locationId
        type: string
        required: true
        description: 'Please append a valid location Id to the request URL' 
    patch:
      description: >-
       This API is associated with updating a Geo-location of an organisation
          - The **_/v1/location/update/{locationId}_** endpoint executes the "update location" request based on parameters provided as metadata in the request body
          -  {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Updates a Geo-location
      operationId: V1LocationUpdateByLocationIdPatch
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description:  >-
            The body refers to the format of the request.
              - The body contains metadata about the request for updating Geo-location.
        schema:
          $ref: '#/definitions/UpdateGeoLocationrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which **update Geo-location** request was sent.'
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request, if the same API is executed multiple times.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      - name: locationId
        in: path
        required: true
        type: string
        description: 'The unique Id provides location information'
      responses:
        '200':
          description: 'OK ! Successful operation.**Update Geo-location** operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "update Geo-location" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/location/delete/{locationId}:
    parameters:
      - in: path
        name: locationId
        type: string
        required: true
        description: 'Please append a valid location Id To the Request URL' 
    delete:
      description: >-
       This API is associated with deleting the corresponding Geo-location of an organisation.
          - The **_ /v1/location/delete/{locationId}_** endpoint executes the "delete location" request based on parameters provided as metadata in the request body
          - {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Delete a Geo-location
      operationId: V1LocationDelete0123667529089925122Delete
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which **delete Geo-location** request was sent.'
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."delete Geo-locationn" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "delete Geo-location" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: DELETE
          uri: /v1/location/delete/0123667529089925122
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Location
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /org/v1/location/read/{locationId}:
    parameters:
      - in: path
        name: locationId
        type: string
        required: true
        description: 'Please append a valid location Id to the Request URL' 
    get:
      description:  >-
       This API is associated with fetching a Geo-location of an organisation on Sunbird platform.
          - The **_/org/v1/location/read/{locationId}_** endpoint executes the "fetch Geo-location" request based on parameters provided as metadata in the request body
          -  {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Get Geo-location By Id
      operationId: OrgV1LocationRead01240144028287795224Get
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        required: true
        type: string
        description: >-
          The type can be either of the two
            - Organisation
            - Location
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which fetch Geo-location request  was sent.'
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."fetch  a geolocation" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "fetch a Geo-location" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /org/v1/location/read/01240144028287795224?type=organisation
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get Geo Location By Id
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  CreateLocationrequest:
    title: Create LocationRequest
    example:
      request:
        rootOrgId: 0123668063921192960
        data:
        - location: name of location
          type: location type optional
        - location: name of location
          type: location type optional
    type: object
    properties:
      request:
        $ref: '#/definitions/Request'
        example:
          rootOrgId: 0123668063921192960
          data:
          - location: name of location
            type: location type optional
          - location: name of location
            type: location type optional
    required:
    - request
  Request:
    title: Request
    example:
      rootOrgId: 0123668063921192960
      data:
      - location: name of location
        type: location type optional
      - location: name of location
        type: location type optional
    type: object
    properties:
      rootOrgId:
        description: ''
        example: 0123668063921192960
        type: string
      data:
        description: ''
        example:
        - location: name of location
          type: location type optional
        - location: name of location
          type: location type optional
        type: array
        items:
          $ref: '#/definitions/Datum'
    required:
    - rootOrgId
    - data
  Datum:
    title: Datum
    example:
      location: name of location
      type: location type optional
    type: object
    properties:
      location:
        description: ''
        example: name of location
        type: string
      type:
        description: ''
        example: location type optional
        type: string
    required:
    - location
    - type
  UpdateGeoLocationrequest:
    title: Update Geo LocationRequest
    example:
      request:
        location: BANGALORE
        type: location type optional
    type: object
    properties:
      request:
        $ref: '#/definitions/Request4'
        example:
          location: BANGALORE
          type: location type optional
    required:
    - request
  Request4:
    title: Request4
    example:
      location: BANGALORE
      type: location type optional
    type: object
    properties:
      location:
        description: ''
        example: BANGALORE
        type: string
      type:
        description: ''
        example: location type optional
        type: string
    required:
    - location
    - type

  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
